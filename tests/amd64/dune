(cram
 (deps
  (package MiniML)
  (package MiniML_amd64)
  %{project_root}/compiler.exe
  %{project_root}/back_amd64/amd64_compiler.exe
  %{project_root}/back_amd64/rukaml_stdlib.o
  ;
  ))

(cram
 (applies_to fac)
 (deps
  ./fac.ml
  ;
  ))

(cram
 (applies_to print)
 (deps
  ./print.ml
  ;
  ))

(rule
 (targets print.asm print.exe)
 (deps
  (:src print.ml)
  (:stdlib %{project_root}/back_amd64/rukaml_stdlib.o))
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run %{project_root}/back_amd64/amd64_compiler.exe %{src} -o print.asm)
   (run nasm -g -F dwarf -felf64 print.asm -o print.o)
   (run gcc-13 -g -no-pie print.o %{stdlib} -o print.exe))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(cram
 (applies_to if)
 (deps
  ./if.ml
  ;
  ))

(rule
 (targets if.asm if.exe)
 (deps
  (:src if.ml)
  (:stdlib %{project_root}/back_amd64/rukaml_stdlib.o))
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run %{project_root}/back_amd64/amd64_compiler.exe %{src} -o if.asm)
   (run nasm -g -F dwarf -felf64 if.asm -o if.o)
   (run gcc-13 -g -no-pie if.o %{stdlib} -o if.exe))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(cram
 (applies_to long_app)
 (deps
  ./long_app.ml
  long_app.exe
  ;
  ))

(rule
 (targets long_app.asm long_app.exe)
 (deps
  (:src long_app.ml)
  (:stdlib %{project_root}/back_amd64/rukaml_stdlib.o))
 (mode
  (promote (until-clean)))
 (action
  (progn
   (run %{project_root}/back_amd64/amd64_compiler.exe %{src} -o long_app.asm)
   (run nasm -g -F dwarf -felf64 long_app.asm -o long_app.o)
   (run gcc-13 -g -no-pie long_app.o %{stdlib} -o long_app.exe))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(cram
 (applies_to run fib fack print tuples)
 (deps
  ../llvm/fack.ml
  fac.ml
  ;
  ))
